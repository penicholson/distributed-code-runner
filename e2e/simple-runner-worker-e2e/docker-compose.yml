version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      e2enetwork:
        ipv4_address: "172.18.0.10"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: 'DOCKER://172.18.0.11:9092'
      KAFKA_ADVERTISED_LISTENERS: 'DOCKER://172.18.0.11:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'DOCKER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'DOCKER'
      KAFKA_CREATE_TOPICS: "processing-request:1:1,processing-result:1:1,processing-failure:1:1,simple-execution-request:1:1,simple-execution-result:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      e2enetwork:
        ipv4_address: "172.18.0.11"
  simplerunnerworker:
    image: dcrsimplerunnerworker:latest
    privileged: true
    environment:
      DCR_SIMPLERUNNERWORKER_BROKER_BOOTSTRAP_URLS: "172.18.0.11:9092"
      DCR_SIMPLERUNNERWORKER_CONFIGURATIONSERVICE_URL: "http://configurationservice:8080"
    networks:
      e2enetwork:
        ipv4_address: "172.18.0.12"
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: hello
      POSTGRES_DB: configurationservice
    networks:
      e2enetwork:
        ipv4_address: "172.18.0.13"
  configurationservice:
    image: dcrconfigurationservice:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/configurationservice
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: hello
      SPRING_JPA_DATABASE-PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL-AUTO: create
    ports:
      - "8080:8080"
    networks:
      e2enetwork:
        ipv4_address: "172.18.0.14"
networks:
  e2enetwork:
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16