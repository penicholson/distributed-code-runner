apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-cluster
  namespace: kafka-cluster
spec:
  replicas: 3
  serviceName: kafka-cluster
  selector:
    matchLabels:
      app: kafka-cluster
  template:
    metadata:
      labels:
        app: kafka-cluster
    spec:
      containers:
        - image: wurstmeister/kafka
          name: kafka
          env:
            - name: BROKER_ID_COMMAND
              value: 'echo ${HOSTNAME##*-}'
            - name: HOSTNAME_COMMAND
              value: 'echo ${HOSTNAME}'
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zookeeper-single:2181'
            - name: KAFKA_LISTENERS
              value: 'INSIDE://_{HOSTNAME_COMMAND}.kafka-cluster.kafka-cluster.svc.cluster.local:9092'
            - name: KAFKA_ADVERTISED_LISTENERES
              value: 'INSIDE://_{HOSTNAME_COMMAND}.kafka-cluster.kafka-cluster.svc.cluster.local:9092'
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'INSIDE:PLAINTEXT'
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: 'INSIDE'
          volumeMounts:
            - name: kafka-cluster-data
              mountPath: '/tmp/kafka-logs'
          ports:
            - containerPort: 9092
  volumeClaimTemplates:
    - metadata:
        name: kafka-cluster-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-cluster
  namespace: kafka-cluster
spec:
  clusterIP: None
  selector:
    app: kafka-cluster
  ports:
    - port: 9092
---
apiVersion: v1
kind: Service
